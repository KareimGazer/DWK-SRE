apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: todos-container
        image: 1701002/todos-json-server:v1.02
        ports:
          - containerPort: 3000
        volumeMounts:
          - name: todos-data
            # the file must pre-exist in the location so it can be read by the json server
            # start the json server with `json-server shared/todos.json`
            # at first run, the shared dir will be empty
            # enter the pod and create an init file then switch from data/todos.json to shared/todos.json
            mountPath: /usr/src/app/dummy
      volumes:
        - name: todos-data
          persistentVolumeClaim:
            claimName: todos-pvc
---
# the associated service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
---
# the associated volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: todos-pvc
spec:
  storageClassName: todos-sc
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem # not sure if needed
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  PORT: "3000"
  DB_URL: 'postgres:5432'
  POSTGRES_PASSWORD: 'admin'
  POSTGRES_USER: 'admin'
  POSTGRES_DB: 'todos'
